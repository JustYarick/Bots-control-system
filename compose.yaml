services:
  postgres:
    image: postgres:16.4
    container_name: magicsbot_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - keycloak-network
    ports:
      - "5432:5432"

  keycloak:
    image: quay.io/keycloak/keycloak:26.1.2
    container_name: magicsbot_keycloak
    restart: unless-stopped
    command: start-dev --import-realm
    environment:
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_STRICT_BACKCHANNEL: false
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: user
      KC_DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin_password
      KC_FEATURES: scripts
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - keycloak-network
    volumes:
      - ./keycloak-import:/opt/keycloak/data/import:ro

  pgadmin:
    image: dpage/pgadmin4:8.6
    container_name: magicsbot_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - keycloak-network
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  redis:
    image: redis:7.4-alpine
    container_name: magicsbot_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - keycloak-network
    command: redis-server --appendonly yes

volumes:
  postgres_data: {}
  pgadmin_data: {}
  redis_data: {}
  prometheus_data: {}
  grafana_data: {}
  es_data: {}

networks:
  keycloak-network:
    driver: bridge
